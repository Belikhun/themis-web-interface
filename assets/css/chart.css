/*
? |-----------------------------------------------------------------------------------------------|
? |  /assets/css/chart.css                                                                        |
? |                                                                                               |
? |  Copyright (c) 2018-2021 Belikhun. All right reserved                                         |
? |  Licensed under the MIT License. See LICENSE in the project root for license information.     |
? |-----------------------------------------------------------------------------------------------|
*/

.chartjs {
	position: relative;
}

.chartjs > .svgBox {
	width: 100%;
	height: 100%;
}

.chartjs > .svgBox > .xAxis,
.chartjs > .svgBox > .yAxis {
	stroke: rgb(0, 0, 0);
	stroke-width: 4px;
	stroke-linecap: round;
}

.chartjs > .svgBox > .hHintLine > line,
.chartjs > .svgBox > .vHintLine > line {
	stroke: rgba(170, 170, 170, 0.2);
	stroke-width: 1px;
}

.chartjs > .svgBox > .hHintLine > line[data-value="0"] {
	stroke: rgb(124, 124, 124);
	stroke-width: 2px;
}

.chartjs > .svgBox > .hHintLine > text,
.chartjs > .svgBox > .vHintLine > text {
	font-family: "Calibri";
	font-size: 14px;
}

.chartjs > .svgBox > .chartLine {
	fill: transparent;
	stroke: rgb(0, 0, 0);
	stroke-width: 2px;
	stroke-linecap: round;

	transition: stroke 0.4s ease;
}

.chartjs.active > .svgBox > .chartLine {
	stroke-width: 3px;
}

.chartjs > .svgBox > .chartShape {
	opacity: 0.2;
	fill: rgb(112, 112, 112);

	transition: fill 0.4s ease;
}

.chartjs > .svgBox > .dotBox > .hoverBox {
	fill: transparent;
}

.chartjs > .svgBox > .cursorLine {
	opacity: 0;
	stroke: black;
	stroke-width: 1px;

	transition: opacity 0.4s ease;
}

.chartjs.active > .svgBox > .cursorLine {
	opacity: 1;
}

.chartjs > .svgBox > .cursorPoint {
	r: 4;
	fill: rgb(255, 255, 255);
	stroke: black;
	stroke-width: 2px;
	transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
}

.chartjs.active > .svgBox > .cursorPoint {
	r: 6;
	stroke-width: 3px;
}

/* ========BLUE======== */

.chartjs[data-color="blue"] > .svgBox > .cursorPoint,
.chartjs[data-color="blue"] > .svgBox > .chartLine {
	stroke: rgb(4, 126, 197);
}

.chartjs[data-color="blue"] > .svgBox > .chartShape {
	fill: rgb(27, 89, 126);
}

/* ========GREEN======== */

.chartjs[data-color="green"] > .svgBox > .cursorPoint,
.chartjs[data-color="green"] > .svgBox > .chartLine {
	stroke: rgb(23, 131, 9);
}

.chartjs[data-color="green"] > .svgBox > .chartShape {
	fill: rgb(61, 202, 43);
}

/* ========YELLOW======== */

.chartjs[data-color="yellow"] > .svgBox > .cursorPoint,
.chartjs[data-color="yellow"] > .svgBox > .chartLine {
	stroke: rgb(130, 139, 4);
}

.chartjs[data-color="yellow"] > .svgBox > .chartShape {
	fill: rgb(202, 199, 43);
}

/* ========RED======== */

.chartjs[data-color="red"] > .svgBox > .cursorPoint,
.chartjs[data-color="red"] > .svgBox > .chartLine {
	stroke: rgb(131, 9, 9);
}

.chartjs[data-color="red"] > .svgBox > .chartShape {
	fill: rgb(235, 66, 66);
}

/* ========PINK======== */

.chartjs[data-color="pink"] > .svgBox > .cursorPoint,
.chartjs[data-color="pink"] > .svgBox > .chartLine {
	stroke: rgb(192, 57, 118);
}

.chartjs[data-color="pink"] > .svgBox > .chartShape {
	fill: rgb(255, 102, 170);
}

/* ========TOOLTIP STYLE======== */

.chartJSData {
	position: relative;
	display: flex;
	flex-direction: column;
}

.chartJSData > .xValue {
	font-family: "Nunito";
	font-size: 12px;
	font-weight: 800;
	font-style: italic;
	letter-spacing: .4px;
	text-align: left;
	color: white;
}

.chartJSData > .yValue {
	position: relative;
	display: flex;
	flex-direction: row;
	align-items: center;
	margin-top: 4px;
}

.chartJSData > .yValue > .value {
	margin-right: 10px;
	font-size: 16px;
	flex-grow: 1;
	color: white;
}

.chartJSData > .yValue > .color {
	position: relative;
	display: inline-block;
	width: 16px;
	height: 16px;
	border-radius: 50%;
	background-color: rgb(255, 255, 255);
}

.chartJSData > .yValue[data-color="blue"] > .color {
	background-color: rgb(143, 205, 255);
}

.chartJSData > .yValue[data-color="green"] > .color {
	background-color: rgb(143, 255, 162);
}

.chartJSData > .yValue[data-color="yellow"] > .color {
	background-color: rgb(248, 255, 143);
}

.chartJSData > .yValue[data-color="red"] > .color {
	background-color: rgb(255, 163, 163);
}

.chartJSData > .yValue[data-color="pink"] > .color {
	background-color: rgb(255, 137, 190);
}