/*
? |-----------------------------------------------------------------------------------------------|
? |  /assets/css/statusBar.css                                                                    |
? |                                                                                               |
? |  Copyright (c) 2018-2021 Belikhun. All right reserved                                         |
? |  Licensed under the MIT License. See LICENSE in the project root for license information.     |
? |-----------------------------------------------------------------------------------------------|
*/

.wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    scroll-behavior: smooth;
}

.statusBar-container {
    margin-bottom: 20px;
    height: calc(100vh - 20px);
    box-sizing: border-box;
}

.statusBar {
    position: fixed;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 20px;
    bottom: 0;
    background-color: #21252B;
    color: rgb(157, 165, 180);
    font-family: "Segoe UI";
    font-size: 10px;
    z-index: 9999;
    transition: background-color 0.6s ease;
}

.statusBar.okay {
    background-color: #27ae60;
    color: white;
}

.statusBar.warn {
    background-color: #e67e22;
    color: white;
}

.statusBar.errr {
    background-color: #c0392b;
    color: white;
}

.statusBar.crit {
    background-color: #8e44ad;
    color: white;
}

.statusBar.lcnt {
    background-color: #d35400;
    color: white;
}

.statusBar .left,
.statusBar .center,
.statusBar .right {
    position: relative;
    display: flex;
    height: 100%;
    flex-grow: 1;
    transition: all 0.6s cubic-bezier(0.06, 0.81, 0, 0.98);
}

.statusBar .left {
    margin-left: 6px;
    left: 0;
}

.statusBar .center {
    flex-grow: 100;
    align-items: center;
    box-sizing: border-box;
    padding: 0 4px;
    transform: translateY(100%);
}

.statusBar .right {
    flex-direction: row-reverse;
    margin-right: 6px;
    right: 0;
}

.statusBar .center .spinner {
    position: relative;
    display: inline-block;
    width: 9px;
    height: 9px;
    margin-right: 6px;
    animation: simple-rotate 0.75s linear 0s infinite;
    border-width: 2px;
    border-style: solid;
    border-radius: 50%;
    border-color: white;
    border-right-color: transparent;
}

@keyframes simple-rotate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.statusBar .center .time,
.statusBar .center text {
    position: relative;
    height: 100%;
    line-height: 22px;
    font-family: "Consolas";
}

.statusBar .center .time {
    color: whitesmoke;
}

.statusBar .center .time::after {
    content: "|";
    font-weight: bolder;
    padding-right: 4px;
}

.statusBar .center text {
    color: white;
    max-width: 100%;
    text-overflow: ellipsis;

    /* Required for text-overflow to do anything */
    white-space: nowrap;
    overflow: hidden;
}

.statusBar.small .left,
.statusBar.small .right {
    flex-grow: unset;
}

.statusBar.small .center {
    position: absolute;
    max-width: 100%;
    height: 100%;
    left: 50%;
    transform: translate(-50%, 100%);
    flex-grow: unset;
}

.statusBar.small.msg .left {
    position: absolute;
    left: -100%;
}

.statusBar.small.msg .right {
    position: absolute;
    right: -100%;
}

.statusBar.small.msg .center {
    transform: translate(-50%, 0);
}

.statusBar.msg .center {
    transform: translateY(0);
}

.statusBar span .item {
    position: relative;
    height: 100%;
    user-select: none;
    display: inline-flex;
    align-items: center;
    vertical-align: top;
    padding: 0 5px;
}

.statusBar span.left .item {
    margin-right: 5px;
}

.statusBar span.right .item {
    margin-left: 5px;
}

.statusBar span .item:hover {
    background-color: rgba(112, 112, 112, 0.2);
}

.statusBar span .item text {
    position: relative;
    display: inline-block;
    line-height: 0;
}

.statusBar span.left .item.no-space,
.statusBar span.right .item.no-space {
    margin-right: unset;
}

.statusBar span .item::before {
    font-family: "Material Icons";
    font-weight: normal;
    font-style: normal;
    font-size: 11px;
    margin-right: 3px;
    /* Support for all WebKit browsers. */
    -webkit-font-smoothing: antialiased;
    /* Support for Safari and Chrome. */
    text-rendering: optimizeLegibility;
    /* Support for Firefox. */
    -moz-osx-font-smoothing: grayscale;
    /* Support for IE. */
    font-feature-settings: "liga";
}

.statusBar span .item.icon-globe::before {
    content: "public";
}

.statusBar span .item.icon-circle::before {
    content: "lens";
}

.statusBar span .item.icon-hub::before {
    content: "device_hub";
}

.statusBar span .item.icon-cloud::before {
    content: "cloud";
}

.statusBar span .item.icon-block::before {
    content: "block";
}

.statusBar span .item.icon-key::before {
    content: "vpn_key";
}

.statusBar span .item.icon-desktop::before {
    content: "desktop_windows";
}

.statusBar span .item.icon-account::before {
    content: "account_circle";
}

.statusBar span .item.icon-server::before {
    content: "dns";
}

.statusBar span .item.icon-warning::before {
    content: "error";
}

.statusBar span .item.icon-error::before {
    content: "cancel";
}

.statusBar span .item.icon-info::before {
    content: "info";
}

.statusBar span .item.icon-spinner::before {
    content: "";
    width: 9px;
    height: 9px;
    border-top: 2px solid transparent;
    border-right: 2px solid transparent;
    border-bottom: 2px solid transparent;
    border-left: 2px solid #fff;
    border-radius: 50%;

    animation: statusBar_icon_spinner 1.1s infinite linear;
}

@keyframes statusBar_icon_spinner {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}