/*
? |-----------------------------------------------------------------------------------------------|
? |  /static/css/dark.css                                                                         |
? |                                                                                               |
? |  Copyright (c) 2018-2021 Belikhun. All right reserved                                         |
? |  Licensed under the MIT License. See LICENSE in the project root for license information.     |
? |-----------------------------------------------------------------------------------------------|
*/

body.dark {
    --status-correct: #86c900;
	--status-passed: #40b0e8;
	--status-accepted: #f6c21c;
	--status-failed: #ff697d;
	--status-skipped: #95adc5;
}

body.dark #superContainer {
	background-color: rgb(10, 10, 10);
}

/** =================== COMPONENTS =================== **/

body.dark .judgeStatus {
    color: rgb(21, 21, 21);
}

body.dark .judgeStatus[data-status="correct"] {
	background-color: var(--status-correct);
}

body.dark .judgeStatus[data-status="passed"] {
	background-color: var(--status-passed);
}

body.dark .judgeStatus[data-status="accepted"] {
	background-color: var(--status-accepted);;
}

body.dark .judgeStatus[data-status="failed"] {
	background-color: var(--status-failed);
}

body.dark .judgeStatus[data-status="skipped"] {
	background-color: var(--status-skipped);
}

body.dark .progressBar.judgeStatusBar > .bar[data-color="green"] {
	background-color: var(--status-correct);
}

body.dark .progressBar.judgeStatusBar > .bar[data-color="blue"] {
	background-color: var(--status-passed);
}

body.dark .progressBar.judgeStatusBar > .bar[data-color="yellow"] {
	background-color: var(--status-accepted);
}

body.dark .progressBar.judgeStatusBar > .bar[data-color="red"] {
	background-color: var(--status-failed);
}

body.dark .progressBar.judgeStatusBar > .bar[data-color="gray"] {
	background-color: var(--status-skipped);
}

/** =================== PANEL =================== **/

body.dark panel,
body.dark panel > .header > .title,
body.dark panel > .header > .buttons > icon {
	background-color: rgb(21, 21, 21);
}

body.dark panel > .header > .buttons > icon:hover {
	background-color: rgb(56, 56, 56);
}

body.dark panel > .header > .buttons > icon[data-icon="reload"]:hover {
	background-color: rgb(38, 131, 218);
}

body.dark panel > .header > .buttons > icon[data-icon="close"]:hover {
	background-color: rgb(232, 55, 94);
}

body.dark panel > .main > .loadingWrapper {
    background-color: rgba(24, 24, 24, 0.8);
}

/** =================== TIMER =================== **/

body.dark .component.timer > icon::after {
	margin-top: 0;
	color: rgb(214, 214, 214);
}

body.dark .component.timer > .progressBar {
	top: 100%;
	height: 3px;
}

body.dark .component.timer > timer {
	margin-top: 0;
}

body.dark .timerDetails > .timeline > .box > .time {
	color: rgb(196, 196, 196);
}

body.dark .timerDetails > .timeline[data-box="1"] > .box[data-name="begin"] > .time,
body.dark .timerDetails > .timeline[data-box="1"] > .box[data-name="begin"] > .date,
body.dark .timerDetails > .timeline[data-box="2"] > .box[data-name="end"] > .time,
body.dark .timerDetails > .timeline[data-box="2"] > .box[data-name="end"] > .date,
body.dark .timerDetails > .timeline[data-box="3"] > .box[data-name="over"] > .time,
body.dark .timerDetails > .timeline[data-box="3"] > .box[data-name="over"] > .date {
	color: rgb(255, 255, 255);
}

body.dark .timerDetails > .timeline > .line > .type {
	color: rgb(165, 165, 165);
}

/** =================== RANKING =================== **/

body.dark .rankingContainer {
	background-color: rgb(14, 14, 14);
}

body.dark .rankingContainer > .header::before {
	background: linear-gradient(to right, #141e30, #243b55);
}

body.dark #ranking > table tr td:nth-child(3) > .username {
    color: rgb(160, 160, 160);
}

body.dark #ranking > table tbody tr[data-rank="1"] {
    background-color: rgba(11, 129, 33, 0.2);
}

body.dark #ranking > table tbody tr[data-rank="2"] {
    background-color: rgba(136, 138, 15, 0.2);
}

body.dark #ranking > table tbody tr[data-rank="3"] {
    background-color: rgba(112, 12, 121, 0.2);
}

body.dark #ranking > table tbody tr[data-rank="1"] td:nth-child(3) > .name,
body.dark #ranking > table tbody tr[data-rank="2"] td:nth-child(3) > .name,
body.dark #ranking > table tbody tr[data-rank="3"] td:nth-child(3) > .name {
    color: rgb(236, 236, 236);
}

body.dark #ranking > table tr th {
    background-color: rgb(14, 14, 14);
    color: rgb(202, 202, 202);
    border-bottom-color: rgb(88, 88, 88);
}

body.dark #ranking > table tr th.problem > t {
    color: rgb(202, 202, 202);
}

body.dark #ranking > table tr th:nth-child(1),
body.dark #ranking > table tr td:nth-child(1) {
    color: rgb(184, 184, 184);
}

body.dark #ranking > table tr td.number {
    color: rgb(124, 124, 124);
}

body.dark #ranking > table tr td.number:nth-child(4) {
    color: rgb(98, 202, 246);
}

body.dark #ranking > table tr td.number:nth-child(5) {
	color: rgb(175, 147, 253);
}

body.dark #ranking > table tr td.number,
body.dark #ranking > table tr td.number > t {
	color: rgb(70, 70, 70);
}

body.dark #ranking > table tr > .number.link > t {
    color: rgb(204, 204, 204);
}

body.dark #ranking > table tr > .number.correct > t,
body.dark #ranking > table tr > .number.passed > t,
body.dark #ranking > table tr > .number.accepted > t,
body.dark #ranking > table tr > .number.failed > t,
body.dark #ranking > table tr > .number.skipped > t {
    color: rgb(22, 22, 22);
}

/** =================== PROBLEM LIST =================== **/

body.dark #problemsPanel > .problemsContainer > .listContainer > .searchBox {
    background-color: rgb(21, 21, 21);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .searchBox.typing {
    background-color: rgb(44, 44, 44);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .searchBox > input::placeholder {
	color: rgba(116, 116, 116, 0.5);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .searchBox:hover > input::placeholder {
	color: rgba(126, 126, 126, 0.7);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .content {
    background-color: rgb(38, 38, 38);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .content > .point {
    background-color: rgb(44, 44, 44);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .content > .detail > span > t::before {
    color: rgb(218, 218, 218);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .background {
    background-color: rgb(38, 38, 38);
    border-color: var(--status-passed);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .background:empty::before {
    color: rgb(158, 158, 158);
}

body.dark #problemsPanel > .problemsContainer > .listContainer > .list > .item > .content > .thumbnail {
    filter: brightness(0.8);
}

/** =================== PROBLEM VIEWER =================== **/

body.dark .problemViewer > .content {
    background-color: rgb(21, 21, 21);
}

body.dark .problemViewer > .content > .details > .left > .items > .item {
    background-color: rgb(44, 44, 44);
}

body.dark .problemViewer > .content > .details > .left > .items > .item > .label {
    color: rgba(192, 192, 192, 0.8);
}

body.dark .problemViewer > .content > .details > .left > .items > .item::before {
    background-color: rgba(255, 255, 255, 0.2);
}

body.dark .problemViewer > .content > .details > .left > .items > .item:hover::before {
    background-color: rgba(255, 255, 255, 0.4);
}

body.dark .problemViewer > .content > .details > .right > .languages {
    color: rgb(109, 197, 255);
}

body.dark .problemViewer > .content > .details > .right > div:empty::after {
    color: rgb(160, 160, 160);
    background-color: rgba(58, 58, 58, 0.2);
}

body.dark .problemViewer > .content > .info > .header > t {
    color: rgba(160, 160, 160, 0.7);
}

body.dark .problemViewer > .content > .info[data-active="content"] > .header > t[key="content"],
body.dark .problemViewer > .content > .info[data-active="ranking"] > .header > t[key="ranking"] {
    color: white;
    border-color: rgb(165, 165, 165);
}

body.dark .problemViewer > .content > .info > .header::after {
    background-color: rgb(165, 165, 165);
}

body.dark .problemViewer > .content > .info > .description > .switch > tag:hover {
    background-color: rgba(65, 65, 65, 0.5);
}

body.dark .problemViewer > .content > .info > .description > .switch[data-active="markdown"] > .markdown,
body.dark .problemViewer > .content > .info > .description > .switch[data-active="code"] > .code {
    color: black;
    background-color: rgb(218, 218, 218);
}

body.dark .problemViewer > .content > .info > .tests > .testContainer > .content > .test {
    background-color: rgb(38, 38, 38);
}

body.dark .problemViewer > .content > .info > .tests > .testContainer > .content > .test > .header {
    background-color: rgb(46, 46, 46);
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item {
    background-color: rgb(38, 38, 38);
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .left > .user > .name {
    color: white;
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .right > span > .item > .label {
    border-bottom-color: rgba(216, 216, 216, 0.3);
    color: rgb(213, 213, 213);
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .right > span > .item > .value {
    color: white;
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .right > .bottom > .item.green > .value > t {
	color: rgb(144, 250, 123);
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .right > .bottom > .item.yellow > .value > t {
	color: rgb(250, 236, 126);
}

body.dark .problemViewer > .content > .info > .ranking > .spotlight > .item > .right > .bottom > .item.red > .value > t {
	color: rgb(255, 146, 175);
}

body.dark .problemViewer > .content > .info > .ranking > table > tbody > tr > td {
    color: rgb(232, 232, 232);
}

body.dark .problemViewer > .content > .info > .ranking > table > tbody > tr:nth-child(2n + 1) > td {
    background-color: #1d1d1d;
}

body.dark .problemViewer > .content > .info > .ranking > table > tbody > tr:hover > td {
    background-color: #292929;
}

/** =================== PROBLEM EDITOR =================== **/

body.dark .problemEditor {
    background-color: rgb(21, 21, 21);
}

body.dark .problemEditor > .header {
    background-color: rgb(21, 21, 21);
}

body.dark .problemEditor > .header > .left > t {
    --text-color: rgba(165, 165, 165, 0.6);
	--bg-color: none;
}

body.dark .problemEditor > .header > .left > t:hover {
	--text-color: rgba(202, 202, 202, 0.8);
	--bg-color: rgba(55, 55, 55, 0.5);
}

body.dark .problemEditor[data-active="main"] > .header > .left > .main,
body.dark .problemEditor[data-active="description"] > .header > .left > .description {
	--text-color: rgb(24, 24, 24);
	--bg-color: rgba(248, 248, 248, 0.9);
}

body.dark .problemEditor > .main > div[key="top"] > span[key="right"] > .accept > .label,
body.dark .problemEditor > .main > div[key="top"] > span[key="left"] > .test > .label {
    color: white;
}

body.dark .problemEditor > .main > div[key="top"] > span[key="right"] > .tagsPreview {
    border-color: rgba(184, 184, 184, 0.6);
}

body.dark .problemEditor > .main > div[key="top"] > span[key="left"] > .test > .list > .cell > textarea {
    color: white;
    background-color: rgb(28, 28, 28);
}

body.dark .problemEditor > .main > div[key="top"] > span[key="left"] > .test > .list > .cell > .delete {
    background-color: rgb(28, 28, 28);
}

body.dark .problemEditor > .main > div[key="top"] > span[key="left"] > .test > .list > .cell > .delete:hover {
    background-color: rgb(36, 36, 36);
}

/** =================== SUBMIT =================== **/

body.dark #submitPanel > .submitContainer > #submitDropzone {
    border-color: rgb(55, 55, 55);
    color: rgb(124, 124, 124);
}

body.dark #submitPanel > .submitContainer > #submitDropzone.drag {
    background-color: rgb(98, 98, 98);
    border-color: rgb(156, 156, 156);
    color: rgb(156, 156, 156);
}

body.dark #submitPanel > .submitContainer > #submitDropzone > .title {
    color: rgb(216, 216, 216);
}

body.dark #submitPanel > .submitContainer > #submitDropzone > .sub {
    color: rgb(160, 160, 160);
}

body.dark #submitPanel > .submitContainer > .info > #submitStatus {
    color: rgb(255, 255, 255);
}

body.dark #submitPanel > .submitContainer > .info > #submitFileName {
    color: rgb(160, 160, 160);
}

/** =================== LOGS =================== **/

body.dark #logsPanel > .logsItemContainer > .logItem > .h {
    border-bottom-color: rgb(38, 38, 38);
}

body.dark #logsPanel > .logsItemContainer > .logItem > .h > .l > .t {
    color: rgba(216, 216, 216, 0.7);
}

body.dark #logsPanel > .logsItemContainer > .logItem > .h > .r > .s {
    color: rgb(218, 218, 218);
}

body.dark #logsPanel > .logsItemContainer > .logItem > .h > .r > .l {
    color: rgb(200, 200, 200);
}

body.dark #logsPanel > .logsItemContainer > .logItem > icon {
    background-color: rgb(28, 28, 28);
}

body.dark #logsPanel > .logsItemContainer > .logItem > icon::after {
	color: #dadada;
}

body.dark #logsPanel > .logsItemContainer > .logItem > icon:hover {
    background-color: rgb(36, 36, 36);
}

body.dark #logsPanel > .logsItemContainer > .logItem > icon:hover::after {
	color: white;
}

body.dark #logsPanel > .logsItemContainer > .logItem.queue > .h > .l > .n {
    color: #bc75fd;
}

body.dark #logsPanel > .logsItemContainer > .logItem.judging > .h > .l > .n {
    color: #ff84f5;
}

body.dark #logsPanel > .logsItemContainer > .logItem > .h > .l > .n {
    color: rgb(162, 162, 162);
}

body.dark #logsPanel > .logsItemContainer > .logItem.scored > .h > .l > .n {
    color: #a1a3ff;
}

body.dark #logsPanel > .logsItemContainer > .logItem.correct > .h > .l > .n {
    color: #36f666;
}

body.dark #logsPanel > .logsItemContainer > .logItem.passed > .h > .l > .n {
    color: #2bd1ee;
}

body.dark #logsPanel > .logsItemContainer > .logItem.accepted > .h > .l > .n {
    color: #eedf3c;
}

body.dark #logsPanel > .logsItemContainer > .logItem.failed > .h > .l > .n {
    color: #fe8f8f;
}

/** =================== LOGVIEWER =================== **/

body.dark .logViewer > .header > .top > .problem > .info > .name {
    color: rgb(228, 228, 228);
}

body.dark .logViewer > .header > .top > .pointContainer > .pointBox > .title {
	background-color: rgba(60, 60, 60, 0.2);
	color: rgb(214, 214, 214);
}

body.dark .logViewer > .header > .bottom > .line > .left > .row {
	color: rgb(224, 224, 224);
}

body.dark .logViewer > .header > .bottom > .line > .left > .row::before {
    color: rgb(180, 180, 180);
}

body.dark .logViewer > .header > .bottom > .line > .left > .problemInfo > .problemID,
body.dark .logViewer > .header > .bottom > .line > .left > .problemInfo > .language {
    color: rgb(224, 224, 224);
}

/*? Correct */

body.dark .logViewer > .header[data-level="correct"] .bottom > .line > .left > .problemInfo > .problemID,
body.dark .logViewer > .header[data-level="correct"] .bottom > .line > .left > .problemInfo > .language,
body.dark .logViewer > .header[data-level="correct"] .bottom > .line > .left > .problemInfo::before {
    color: #38ce5d;
}

body.dark .logViewer > .header[data-level="correct"]::before {
    background-color: #38ce5d;
}

/*? Passed */

body.dark .logViewer > .header[data-level="passed"] .bottom > .line > .left > .problemInfo > .problemID,
body.dark .logViewer > .header[data-level="passed"] .bottom > .line > .left > .problemInfo > .language,
body.dark .logViewer > .header[data-level="passed"] .bottom > .line > .left > .problemInfo::before {
    color: #38bdce;
}

body.dark .logViewer > .header[data-level="passed"]::before {
    background-color: #38bdce;
}

/*? Accepted */

body.dark .logViewer > .header[data-level="accepted"] .bottom > .line > .left > .problemInfo > .problemID,
body.dark .logViewer > .header[data-level="accepted"] .bottom > .line > .left > .problemInfo > .language,
body.dark .logViewer > .header[data-level="accepted"] .bottom > .line > .left > .problemInfo::before {
    color: #e4d429;
}

body.dark .logViewer > .header[data-level="accepted"]::before {
    background-color: #e4d429;
}

/*? Failed */

body.dark .logViewer > .header[data-level="failed"] .bottom > .line > .left > .problemInfo > .problemID,
body.dark .logViewer > .header[data-level="failed"] .bottom > .line > .left > .problemInfo > .language,
body.dark .logViewer > .header[data-level="failed"] .bottom > .line > .left > .problemInfo::before {
    color: #f56a6a;
}

body.dark .logViewer > .header[data-level="failed"]::before {
    background-color: #ee4c4c;
}

body.dark .logViewer > .header > .bottom > .line > .left > .result > b.green {
    color: #38ce5d;
}

body.dark .logViewer > .header > .bottom > .line > .left > .result > b.red {
    color: #f56a6a;
}

body.dark .logViewer > .header > .bottom > .line > .right > .submitter > .info > .tag {
    color: rgb(185, 185, 185);
}

body.dark .logViewer > .header > .bottom > .line > .right > .submitter > .info > .name {
    color: rgb(228, 228, 228);
}

body.dark .logViewer > .header > .bottom > .line > .right > t {
    color: rgb(250, 250, 250);
}

body.dark .logViewer > .testList,
body.dark .logViewer > .testList > .item {
    background-color: rgb(21, 21, 21);
}

body.dark .logViewer > .testList > .item:hover {
    background-color: rgb(36, 36, 36);
}

body.dark .logViewer > .testList > .item > .line.detail > t {
    color: rgb(172, 172, 172);
}

body.dark .logViewer > .testList > .item > .line > .left > .testID {
    color: rgb(214, 214, 214);
}

body.dark .logViewer > .testList > .item.passed::before {
    background-color: #38ce5d;
}

body.dark .logViewer > .testList > .item.passed > .line > .left > .testID {
    color: #38ce5d;
}

body.dark .logViewer > .testList > .item.accepted::before {
    background-color: #e4d429;
}

body.dark .logViewer > .testList > .item.accepted > .line > .left > .testID {
    color: #e4d429;
}

body.dark .logViewer > .testList > .item.failed::before {
    background-color: #ee4c4c;
}

body.dark .logViewer > .testList > .item.failed > .line > .left > .testID {
    color: #f56a6a;
}

body.dark .logViewer > .testList > .item .right .point {
    color: rgb(204, 204, 204);
}

body.dark .logViewer > .testList > .item .right .runtime {
    color: rgb(180, 180, 180);
}

/** =================== SYSLOGS =================== **/

body.dark #syslogs > .logsContainer > .log {
    background-color: transparent;
}

body.dark #syslogs > .logsContainer > .log:hover {
    background-color: rgba(42, 42, 42, 0.8);
}

body.dark #syslogs > .logsContainer > .log > .level {
    background-color: rgba(48, 48, 48, 0.8);
    color: rgb(218, 218, 218);
}

body.dark #syslogs > .logsContainer > .log.enlarge > .level {
    background-color: rgba(75, 75, 75, 0.8);
}

body.dark #syslogs > .logsContainer > .log > .detail {
    border-left: 2px solid rgb(104, 104, 104);
}

body.dark #syslogs > .logsContainer > .log > .detail > .info > t {
    color: rgb(213, 213, 213);
}

body.dark #syslogs > .logsContainer > .log > .detail > .text {
    color: rgb(228, 228, 228);
}

body.dark #syslogs > .logsContainer > .log.okay > .detail {
    border-left-color: rgb(14, 194, 26);
}

body.dark #syslogs > .logsContainer > .log.okay > .level {
    color: rgb(15, 228, 30);
}

body.dark #syslogs > .logsContainer > .log.warn > .detail {
    border-left-color: rgb(194, 194, 16);
}

body.dark #syslogs > .logsContainer > .log.warn > .level {
    color: rgb(224, 224, 20);
}

body.dark #syslogs > .logsContainer > .log.errr > .detail {
    border-left-color: rgb(241, 80, 80);
}

body.dark #syslogs > .logsContainer > .log.errr > .level {
    color: rgb(248, 154, 154);
}

body.dark #syslogs > .logsContainer > .log.verb > .detail {
    border-left-color: rgb(196, 110, 236);
}

body.dark #syslogs > .logsContainer > .log.verb > .level {
    color: rgb(217, 153, 246);
}

body.dark #syslogs > .navigation {
    background-color: rgba(28, 28, 28, 0.8);
}

body.dark #syslogs > .navigation > .left,
body.dark #syslogs > .navigation > .right {
    color: rgb(204, 204, 204);
}

body.dark #syslogs > .navigation > .middle > .icon::before {
    color: rgb(95, 95, 95);
}

body.dark #syslogs > .navigation > .middle > .icon:hover::before {
    color: #f67fe6;
}

body.dark #syslogs > .navigation > .middle > .currentPage {
    color: rgb(230, 230, 230);
}